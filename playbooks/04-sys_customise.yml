---
- name: Sysctl params
  hosts: localhost
  connection: local
  become: yes
  vars_files: ../allvars.yml
  
  tasks:
  
  # Add the kvm_intel modprobe  params.
    - template:
        src: /root/virt_ocp/templates/sysctl_kvm_intel.yml
        dest: /etc/modprobe.d/kvm_intel.conf
      notify: restart vbmcd

# Configure the sysctl params
    - sysctl:
        name: "{{ item.param }}"
        value: "{{ item.val }}"
        sysctl_file: /etc/sysctl.d/98-rp-filter.conf
        sysctl_set: yes
        reload: yes
      loop: "{{ sysctl_vars }}"
    
# Enable and start the libvirtd service    
    - systemd:
        name: libvirtd
        state: started
        enabled: yes

# Stop the default network
    - virt_net:
        command: destroy
        name: default


# Add a static IPs in the dhcp pool
    - virt_net:
        name: default
        command: modify
        xml: "{{ item }}"
      loop: "{{ multi_pattern }}"
#        xml: '{{ lookup("template", "../templates/static_ips_virt_net.xml.j2") }}'

# Start the default network
    - virt_net:
        command: create
        name: default

# 
# Sets default ACL 
    - acl:
        path: "{{ item.acl_path }}"
        entity: "{{ item.entity_name }}"
        etype: "{{ item.entity_type }}"
        permissions: "{{ item.acl_perms }}"
        recursive: yes
        default: yes
        state: present
      loop: "{{ setfacl_vars }}
    
     
# Managing the file contexts on a DIR
    - sefcontext:
        target: "{{ item.sefcontext_tgt_path }}"
        setype: ""{{ item.sefcontext_type }}"
        state: "{{ item.sefcontext_state }}"
      loop: "{{ semanage_fcontext_vars }}"
    
    - name: Apply new SELinux file context to filesystem
      command: restorecon -vvFR /home/images

# Define a new storage pool
    - virt_pool:
        command: define
        name: default
        xml: '{{ lookup("template", "/root/virt_ocp/templates/pool.xml.j2") }}'
    
# Build a storage pool if it does not exist
    - virt_pool:
        command: build
        name: default
    
# Start a storage pool
    - virt_pool:
        command: create
        name: default
    
# Ensure that a pool is active and autostarted (needs to be defined and built first)
    - virt_pool:
        state: active
        autostart: yes
        name: default



  handlers:
    - name: restart vbmcd
      systemd:
        name: vbmcd
        state: restarted
        enabled: yes
